{"version":3,"sources":["components/Header.js","components/Home.js","components/CharactersNav.js","components/CharacterInfo.js","components/EpisodesNav.js","components/EpisodeInfo.js","components/QuotesNav.js","components/QuoteInfo.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","Home","CharactersNav","useEffect","fetchCharacters","useState","characters","setCharacters","a","fetch","charactersData","json","console","log","map","character","key","char_id","name","CharacterInfo","match","fetchCharacterInfo","setCharacter","params","characterId","occupation","src","img","alt","nickname","birthday","appearance","status","portrayed","EpisodesNav","fetchEpisodes","episodes","setEpisodes","episodesData","episode","episode_id","title","EpisodeInfo","fetchEpisodeInfo","setEpisode","episodeId","season","air_date","QuotesNav","fetchQuotes","quotes","setQuotes","quotesData","quote","quote_id","QuoteInfo","fetchQuoteInfo","setQuote","quoteId","author","Footer","href","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.21491cea.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Header() {\n\treturn (\n\t\t<header>\n\t\t\t<nav>\n\t\t\t\t<Link className='links' to='/'>\n\t\t\t\t\t<h1>Br</h1>\n\t\t\t\t</Link>\n\t\t\t\t<ul>\n\t\t\t\t\t<Link className='links' to='/characters'>\n\t\t\t\t\t\t<li>Characters</li>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link className='links' to='/episodes'>\n\t\t\t\t\t\t<li>Episodes</li>\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link className='links' to='/quotes'>\n\t\t\t\t\t\t<li>Quotes</li>\n\t\t\t\t\t</Link>\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t</header>\n\t);\n}\n\nexport default Header;\n","import React from 'react';\n\nfunction Home () {\n    return (\n\t\t\t<>\n\t\t\t\t<h1>This is the Home page including instructions for navigation and 'about' content.</h1>\n\t\t\t</>\n\t\t);\n}\n\nexport default Home;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction CharactersNav() {\n\tuseEffect(() => {\n\t\tfetchCharacters();\n\t}, []);\n\n\tconst [characters, setCharacters] = useState([]);\n\n\tconst fetchCharacters = async () => {\n\t\tconst charactersData = await fetch(\n\t\t\t'https://www.breakingbadapi.com/api/characters'\n\t\t);\n\t\tconst characters = await charactersData.json();\n\t\tconsole.log(characters);\n\t\tsetCharacters(characters);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<h3 className='page-title'>Characters</h3>\n\t\t\t{characters.map((character) => (\n\t\t\t\t<h5 key={character.char_id}>\n\t\t\t\t\t<Link className='names-list' to={`/characters/${character.char_id}`}>\n\t\t\t\t\t\t{character.name}\n\t\t\t\t\t</Link>\n\t\t\t\t</h5>\n\t\t\t))}\n\t\t</>\n\t);\n}\n\nexport default CharactersNav;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction CharacterInfo({ match }) {\n\tuseEffect(() => {\n\t\tfetchCharacterInfo();\n\t\tconsole.log(match);\n\t}, []);\n\n\tconst [character, setCharacter] = useState([]);\n\n\tconst fetchCharacterInfo = async () => {\n\t\tconst fetchCharacterInfo = await fetch(\n\t\t\t`https://www.breakingbadapi.com/api/characters/${match.params.characterId}`\n\t\t);\n\t\tconst character = await fetchCharacterInfo.json();\n\t\tsetCharacter(character[0]);\n\t\tconsole.log(character);\n\t\tconsole.log(character[0].occupation[1]);\n\t};\n\n\treturn (\n\t\t<section className='item-info'>\n\t\t\t<h3 className='page-title'>{character.name}</h3>\n\t\t\t<img\n\t\t\t\tclassName='character-image'\n\t\t\t\tsrc={character.img}\n\t\t\t\talt={character.name}\n\t\t\t/>\n\t\t\t<div className='character-details-div'>\n\t\t\t\t<ul className='details'>\n\t\t\t\t\t<li className='details-parameter'>alias :</li>\n\t\t\t\t\t<li className='details-result'>{character.nickname}</li>\n\t\t\t\t\t<li className='details-parameter'>birthday :</li>\n\t\t\t\t\t<li className='details-result'>{character.birthday}</li>\n\t\t\t\t\t<li className='details-parameter'>occupation :</li>\n\t\t\t\t\t<li className='details-result'>{character.occupation}</li>\n\t\t\t\t\t<li className='details-parameter'>appears in seasons :</li>\n\t\t\t\t\t<li className='details-result'>{character.appearance}</li>\n\t\t\t\t\t<li className='details-parameter'>status :</li>\n\t\t\t\t\t<li className='details-result'>{character.status}</li>\n\t\t\t\t\t<li className='details-parameter'>played by :</li>\n\t\t\t\t\t<li className='details-result'>{character.portrayed}</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<Link to='/characters'>\n\t\t\t\t<h4 className='back-to'>Back to Characters</h4>\n\t\t\t</Link>\n\t\t</section>\n\t);\n}\n\nexport default CharacterInfo;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction EpisodesNav() {\n\tuseEffect(() => {\n\t\tfetchEpisodes();\n\t}, []);\n\n\tconst [episodes, setEpisodes] = useState([]);\n\n\tconst fetchEpisodes = async () => {\n\t\tconst episodesData = await fetch(\n\t\t\t'https://www.breakingbadapi.com/api/episodes'\n\t\t);\n\t\tconst episodes = await episodesData.json();\n\t\tconsole.log(episodes);\n\t\tsetEpisodes(episodes);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<h3 className='page-title'>Episodes</h3>\n\t\t\t{episodes.map((episode) => (\n\t\t\t\t<h5 key={episode.episode_id}>\n\t\t\t\t\t<Link className='names-list' to={`/episodes/${episode.episode_id}`}>\n\t\t\t\t\t\t{episode.title}\n\t\t\t\t\t</Link>\n\t\t\t\t</h5>\n\t\t\t))}\n\t\t</>\n\t);\n}\n\nexport default EpisodesNav;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction EpisodeInfo({ match }) {\n\tuseEffect(() => {\n\t\tfetchEpisodeInfo();\n\t\t// console.log(match);\n\t}, []);\n\n\tconst [episode, setEpisode] = useState([]);\n\n\tconst fetchEpisodeInfo = async () => {\n\t\tconst fetchEpisodeInfo = await fetch(\n\t\t\t`https://www.breakingbadapi.com/api/episodes/${match.params.episodeId}`\n\t\t);\n\t\tconst episode = await fetchEpisodeInfo.json();\n\t\tsetEpisode(episode[0]);\n\t\tconsole.log(episode);\n\t\tconsole.log(episode[0].characters[3]);\n\t};\n\n\treturn (\n\t\t<section className='item-info'>\n\t\t\t<h3 className='page-title'>{episode.title}</h3>\n\t\t\t<div className='episode-details-div'>\n\t\t\t\t<ul className='details'>\n\t\t\t\t\t<li className='details-parameter'>season :</li>\n\t\t\t\t\t<li className='details-result'>{episode.season}</li>\n\t\t\t\t\t<li className='details-parameter'>episode :</li>\n\t\t\t\t\t<li className='details-result'>{episode.episode}</li>\n\t\t\t\t\t<li className='details-parameter'>characters :</li>\n\t\t\t\t\t<li className='details-result'>{episode.characters}</li>\n\t\t\t\t\t<li className='details-parameter'>air date :</li>\n\t\t\t\t\t<li className='details-result'>{episode.air_date}</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<Link to='/episodes'>\n\t\t\t\t<h4 className='back-to'>Back to Episodes</h4>\n\t\t\t</Link>\n\t\t</section>\n\t);\n}\n\nexport default EpisodeInfo;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction QuotesNav() {\n\tuseEffect(() => {\n\t\tfetchQuotes();\n\t}, []);\n\n\tconst [quotes, setQuotes] = useState([]);\n\n\tconst fetchQuotes = async () => {\n\t\tconst quotesData = await fetch('https://www.breakingbadapi.com/api/quotes');\n\t\tconst quotes = await quotesData.json();\n\t\tconsole.log(quotes);\n\t\tsetQuotes(quotes);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<h3 className='page-title'>Quotes</h3>\n\t\t\t{quotes.map((quote) => (\n\t\t\t\t<h4 key={quote.quote_id}>\n\t\t\t\t\t<Link className='names-list' to={`/quotes/${quote.quote_id}`}>\n\t\t\t\t\t\t<i>\"{quote.quote}\"</i>\n\t\t\t\t\t</Link>\n\t\t\t\t</h4>\n\t\t\t))}\n\t\t</>\n\t);\n}\n\nexport default QuotesNav;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction QuoteInfo({ match }) {\n\tuseEffect(() => {\n\t\tfetchQuoteInfo();\n\t\tconsole.log(match);\n\t}, []);\n\n\tconst [quote, setQuote] = useState([]);\n\n\tconst fetchQuoteInfo = async () => {\n\t\tconst fetchQuoteInfo = await fetch(\n\t\t\t`https://www.breakingbadapi.com/api/quotes/${match.params.quoteId}`\n\t\t);\n\t\tconst quote = await fetchQuoteInfo.json();\n\t\tsetQuote(quote[0]);\n\t\tconsole.log(quote);\n\t\tconsole.log(quote[0].author);\n\t};\n\n\treturn (\n\t\t<section className='item-info'>\n\t\t\t<h3 className='quote-page-title'>\n\t\t\t\t<i>\" {quote.quote} \"</i>\n\t\t\t</h3>\n\t\t\t<div className='quote-details-div'>\n\t\t\t\t<ul className='details'>\n\t\t\t\t\t<li className='quote-details-result'>- {quote.author}</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<Link to='/quotes'>\n\t\t\t\t<h4 className='back-to'>Back to Quotes</h4>\n\t\t\t</Link>\n\t\t</section>\n\t);\n}\n\nexport default QuoteInfo;\n","import React from 'react';\n\nexport default function Footer() {\n\treturn (\n\t\t<footer>\n\t\t\t<ul className='sign-profile-link'>\n\t\t\t\t<li className='sign-profile-link'>\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName='sign-profile-link'\n\t\t\t\t\t\thref='https://www.linkedin.com/in/andresortizmontalvo/'>\n\t\t\t\t\t\tL I N K E D I N\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li className='sign-profile-link'>\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName='sign-profile-link'\n\t\t\t\t\t\thref='https://github.com/andresaugusto'>\n\t\t\t\t\t\tG I T H U B\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li className='sign-profile-link'>\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName='sign-profile-link'\n\t\t\t\t\t\thref='https://codepen.io/andresaugusto'>\n\t\t\t\t\t\tC O D E P E N\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<div className='sign-email'>andres.augusto@icloud.com</div>\n\t\t\t{/* <div className='sign-virtual'>\n\t\t\t\t<img\n\t\t\t\t\tclassName='sign-virtual-image'\n\t\t\t\t\tsrc='src/images/virtual.png'\n\t\t\t\t\talt='virtual.png'\n\t\t\t\t/>\n\t\t\t</div> */}\n\t\t\t<span className='sign-date'>\n\t\t\t\t<small>\n\t\t\t\t\t20<span className='sign-first-letter'>20</span>\n\t\t\t\t</small>\n\t\t\t</span>\n\t\t</footer>\n\t);\n}\n","import React from 'react';\nimport Header from './components/Header';\nimport Home from './components/Home';\nimport CharactersNav from './components/CharactersNav';\nimport CharacterInfo from './components/CharacterInfo';\nimport EpisodesNav from './components/EpisodesNav';\nimport EpisodeInfo from './components/EpisodeInfo';\nimport QuotesNav from './components/QuotesNav';\nimport QuoteInfo from './components/QuoteInfo';\nimport Footer from './components/Footer';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n// import { Link, Route } from 'react-router-dom';\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<div className='App'>\n\t\t\t\t<Header />\n\t\t\t\t<Route path='/' exact component={Home} />\n\t\t\t\t<Route path='/characters' exact component={CharactersNav} />\n\t\t\t\t<Route path='/characters/:characterId' component={CharacterInfo} />\n\t\t\t\t<Route path='/episodes' exact component={EpisodesNav} />\n\t\t\t\t<Route path='/episodes/:episodeId' component={EpisodeInfo} />\n\t\t\t\t<Route path='/quotes' exact component={QuotesNav} />\n\t\t\t\t<Route path='/quotes/:quoteId' component={QuoteInfo} />\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}